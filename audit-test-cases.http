### SIRHA API - Casos de Prueba de Auditoría
### Pruebas para FEAT-018 US-0071: Evento Auditoría

@baseUrl = http://localhost:3000
@contentType = application/json

### ===========================================
### 1. AUDITORÍA AUTOMÁTICA EN CREACIÓN
### ===========================================

### 1.1 Crear estudiante con auditoría automática
POST {{baseUrl}}/audit-examples/student
Content-Type: {{contentType}}

{
  "code": "EST001",
  "firstName": "Juan",
  "lastName": "Pérez",
  "programId": "60d5ecb8b0a7c4b4b8b9b1a1",
  "observations": "Estudiante de primer ingreso"
}

### 1.2 Crear estudiante real (con auditoría automática)
POST {{baseUrl}}/students
Content-Type: {{contentType}}
Authorization: Bearer YOUR_JWT_TOKEN

{
  "code": "AUD001",
  "firstName": "María",
  "lastName": "García",
  "programId": "60d5ecb8b0a7c4b4b8b9b1a1",
  "currentSemester": 1,
  "observations": "Estudiante para prueba de auditoría"
}

### ===========================================
### 2. AUDITORÍA MANUAL
### ===========================================

### 2.1 Registrar evento de auditoría manualmente
POST {{baseUrl}}/audit-examples/manual-audit
Content-Type: {{contentType}}

### ===========================================
### 3. CONSULTA DE HISTORIAL DE AUDITORÍA
### ===========================================

### 3.1 Obtener historial por ID de solicitud
GET {{baseUrl}}/audit-examples/history/60d5ecb8b0a7c4b4b8b9b1a4

### 3.2 Obtener historial de solicitud manual
GET {{baseUrl}}/audit-examples/history/manual-request-123

### ===========================================
### 4. VERIFICACIÓN DE DATOS DE AUDITORÍA
### ===========================================

### 4.1 Crear múltiples estudiantes para generar historial
POST {{baseUrl}}/audit-examples/student
Content-Type: {{contentType}}

{
  "code": "EST002",
  "firstName": "Carlos",
  "lastName": "López",
  "programId": "60d5ecb8b0a7c4b4b8b9b1a2"
}

### 4.2 Crear estudiante con datos completos
POST {{baseUrl}}/audit-examples/student
Content-Type: {{contentType}}

{
  "code": "EST003",
  "firstName": "Ana",
  "lastName": "Martínez",
  "programId": "60d5ecb8b0a7c4b4b8b9b1a3",
  "email": "ana.martinez@universidad.edu",
  "phone": "+57 300 123 4567",
  "currentSemester": 2,
  "observations": "Estudiante con observaciones para auditoría"
}

### ===========================================
### NOTAS DE PRUEBA:
### 
### Criterios de aceptación verificados:
### ✅ Se registra evento CREATE automáticamente
### ✅ Incluye información completa del actor
### ✅ Datos almacenados son consistentes
### 
### Campos verificados en auditoría:
### - requestId: ID de la solicitud/entidad creada
### - eventType: 'CREATE' automático
### - actorId: ID del usuario que ejecuta la acción
### - timestamp: Momento exacto del evento
### - requestDetails: Datos completos de la solicitud
### - ipAddress: IP del cliente
### - userAgent: Navegador/cliente utilizado
### 
### Casos de uso:
### - Trazabilidad completa de creaciones
### - Auditoría de seguridad
### - Cumplimiento normativo
### - Investigación de incidentes
### ===========================================