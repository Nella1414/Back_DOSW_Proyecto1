### SIRHA API - Casos de Prueba de Generación de Radicados
### Pruebas para FEAT-019 US-0072: Servicio Generación Radicado

@baseUrl = http://localhost:3000
@contentType = application/json

### ===========================================
### 1. GENERACIÓN BÁSICA DE RADICADOS
### ===========================================

### 1.1 Generar primer radicado del año
POST {{baseUrl}}/radicado-examples/generate
Content-Type: {{contentType}}

### 1.2 Generar segundo radicado (secuencial)
POST {{baseUrl}}/radicado-examples/generate
Content-Type: {{contentType}}

### 1.3 Generar tercer radicado (secuencial)
POST {{baseUrl}}/radicado-examples/generate
Content-Type: {{contentType}}

### ===========================================
### 2. CONSULTAS DE RADICADOS
### ===========================================

### 2.1 Obtener último radicado del año actual
GET {{baseUrl}}/radicado-examples/last

### 2.2 Obtener último radicado de año específico (2024)
GET {{baseUrl}}/radicado-examples/last/2024

### 2.3 Obtener último radicado de año sin datos (2023)
GET {{baseUrl}}/radicado-examples/last/2023

### 2.4 Obtener estadísticas de todos los años
GET {{baseUrl}}/radicado-examples/stats

### ===========================================
### 3. PRUEBAS DE CONCURRENCIA
### ===========================================

### 3.1 Generar 5 radicados simultáneos (prueba unicidad)
POST {{baseUrl}}/radicado-examples/bulk/5
Content-Type: {{contentType}}

### 3.2 Generar 10 radicados simultáneos
POST {{baseUrl}}/radicado-examples/bulk/10
Content-Type: {{contentType}}

### 3.3 Generar 25 radicados simultáneos (carga media)
POST {{baseUrl}}/radicado-examples/bulk/25
Content-Type: {{contentType}}

### ===========================================
### 4. INTEGRACIÓN CON SOLICITUDES DE CAMBIO
### ===========================================

### 4.1 Crear solicitud de cambio (debe generar radicado automáticamente)
POST {{baseUrl}}/change-request-examples
Content-Type: {{contentType}}

{
  "sourceSubjectId": "60d5ecb8b0a7c4b4b8b9b1a1",
  "sourceGroupId": "60d5ecb8b0a7c4b4b8b9b1a2",
  "targetSubjectId": "60d5ecb8b0a7c4b4b8b9b1a3",
  "targetGroupId": "60d5ecb8b0a7c4b4b8b9b1a4",
  "reason": "Solicitud con radicado automático"
}

### 4.2 Crear segunda solicitud (radicado secuencial)
POST {{baseUrl}}/change-request-examples
Content-Type: {{contentType}}

{
  "sourceSubjectId": "60d5ecb8b0a7c4b4b8b9b1a5",
  "sourceGroupId": "60d5ecb8b0a7c4b4b8b9b1a6",
  "targetSubjectId": "60d5ecb8b0a7c4b4b8b9b1a7",
  "targetGroupId": "60d5ecb8b0a7c4b4b8b9b1a8",
  "reason": "Segunda solicitud con radicado secuencial"
}

### 4.3 Verificar solicitud creada (debe incluir radicado)
GET {{baseUrl}}/change-request-examples/60d5ecb8b0a7c4b4b8b9b1a4

### ===========================================
### 5. PRUEBAS DE FORMATO Y VALIDACIÓN
### ===========================================

### 5.1 Verificar formato de radicado (YYYY-NNNNNN)
POST {{baseUrl}}/radicado-examples/generate
Content-Type: {{contentType}}

### 5.2 Generar múltiples para verificar padding de ceros
POST {{baseUrl}}/radicado-examples/bulk/3
Content-Type: {{contentType}}

### 5.3 Verificar estadísticas después de generaciones
GET {{baseUrl}}/radicado-examples/stats

### ===========================================
### 6. PRUEBAS DE CAMBIO DE AÑO (SIMULACIÓN)
### ===========================================

### 6.1 Obtener último radicado actual
GET {{baseUrl}}/radicado-examples/last

### 6.2 Generar radicado adicional
POST {{baseUrl}}/radicado-examples/generate
Content-Type: {{contentType}}

### 6.3 Verificar secuencia continúa correctamente
GET {{baseUrl}}/radicado-examples/last

### ===========================================
### NOTAS DE PRUEBA:
### 
### Criterios de aceptación verificados:
### ✅ Radicados son únicos por año
### ✅ Secuencia es consecutiva  
### ✅ Funciona correctamente en concurrencia
### ✅ Cambio de año se maneja bien
### ✅ Performance apropiado
### 
### Formato verificado:
### - YYYY-NNNNNN (ej: 2024-000001)
### - Padding con ceros a la izquierda
### - Secuencia reinicia cada año
### 
### Operaciones atómicas:
### - findOneAndUpdate con $inc
### - upsert para crear contador si no existe
### - Índice único en year para prevenir duplicados
### 
### Integración verificada:
### - Asignación automática en solicitudes
### - Campo radicado en entidad ChangeRequest
### - Unicidad garantizada con índice sparse
### ===========================================